/*----HEADER----*/
package main;

import (
	"fmt"
)

var t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16 float64
var P, H float64;
var stack [30101999]float64;
var heap [30101999]float64;

/*-----NATIVES-----*/
func printString(){
	t2=P+1;
	t3=stack[int(t2)];
	L1:
	t4=heap[int(t3)];
	if t4 == -1 {goto L0;}
	fmt.Printf("%c", int(t4));
	t3=t3+1;
	goto L1;
	L0:
	return;
}


func main(){
	/* Compilacion de valor de variable */
	t0=H;
	heap[int(H)]=65;
	H=H+1;
	heap[int(H)]=118;
	H=H+1;
	heap[int(H)]=101;
	H=H+1;
	heap[int(H)]=110;
	H=H+1;
	heap[int(H)]=103;
	H=H+1;
	heap[int(H)]=101;
	H=H+1;
	heap[int(H)]=114;
	H=H+1;
	heap[int(H)]=115;
	H=H+1;
	heap[int(H)]=-1;
	H=H+1;
	/* Fin de valor de variable */
	stack[int(0)]=t0;
	
	/* Compilacion de Acceso */
	t1=stack[int(0)];
	/* Fin compilacion acceso */
	
	t5=P+1;
	t5=t5+1;
	stack[int(t5)]=t1;
	P=P+1;
	printString();
	t6=stack[int(P)];
	P=P-1;
	fmt.Printf("%c", int(10));
	t7=H;
	heap[int(H)]=45;
	H=H+1;
	heap[int(H)]=45;
	H=H+1;
	heap[int(H)]=45;
	H=H+1;
	heap[int(H)]=45;
	H=H+1;
	heap[int(H)]=45;
	H=H+1;
	heap[int(H)]=45;
	H=H+1;
	heap[int(H)]=45;
	H=H+1;
	heap[int(H)]=45;
	H=H+1;
	heap[int(H)]=45;
	H=H+1;
	heap[int(H)]=109;
	H=H+1;
	heap[int(H)]=111;
	H=H+1;
	heap[int(H)]=100;
	H=H+1;
	heap[int(H)]=117;
	H=H+1;
	heap[int(H)]=108;
	H=H+1;
	heap[int(H)]=97;
	H=H+1;
	heap[int(H)]=114;
	H=H+1;
	heap[int(H)]=32;
	H=H+1;
	heap[int(H)]=50;
	H=H+1;
	heap[int(H)]=46;
	H=H+1;
	heap[int(H)]=48;
	H=H+1;
	heap[int(H)]=45;
	H=H+1;
	heap[int(H)]=45;
	H=H+1;
	heap[int(H)]=45;
	H=H+1;
	heap[int(H)]=45;
	H=H+1;
	heap[int(H)]=45;
	H=H+1;
	heap[int(H)]=45;
	H=H+1;
	heap[int(H)]=45;
	H=H+1;
	heap[int(H)]=45;
	H=H+1;
	heap[int(H)]=45;
	H=H+1;
	heap[int(H)]=45;
	H=H+1;
	heap[int(H)]=-1;
	H=H+1;
	t8=P+1;
	t8=t8+1;
	stack[int(t8)]=t7;
	P=P+1;
	printString();
	t9=stack[int(P)];
	P=P-1;
	fmt.Printf("%c", int(10));
	/* Compilacion de If */
	/* INICIO EXPRESION RELACIONAL */
	if 2 > 1 {goto L2;}
	goto L3;
	/* FIN DE EXPRESION RELACIONAL */
	
	L2:
	/* Compilacion de valor de variable */
	t10=H;
	heap[int(H)]=104;
	H=H+1;
	heap[int(H)]=111;
	H=H+1;
	heap[int(H)]=108;
	H=H+1;
	heap[int(H)]=97;
	H=H+1;
	heap[int(H)]=50;
	H=H+1;
	heap[int(H)]=-1;
	H=H+1;
	/* Fin de valor de variable */
	stack[int(1)]=t10;
	
	/* Compilacion de Acceso */
	t11=stack[int(1)];
	/* Fin compilacion acceso */
	
	t12=P+2;
	t12=t12+1;
	stack[int(t12)]=t11;
	P=P+2;
	printString();
	t13=stack[int(P)];
	P=P-2;
	fmt.Printf("%c", int(10));
	/* Compilacion de Acceso */
	t14=stack[int(0)];
	/* Fin compilacion acceso */
	
	t15=P+2;
	t15=t15+1;
	stack[int(t15)]=t14;
	P=P+2;
	printString();
	t16=stack[int(P)];
	P=P-2;
	fmt.Printf("%c", int(10));
	L3:

}