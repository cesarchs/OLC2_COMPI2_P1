



###############################################################
###############################################################
###############################################################
###############################################################
###############################################################
###############################################################
###############################################################
###############################################################
###############################################################
###############################################################
###############################################################
###############################################################
###############################################################
###############################################################
###############################################################


println(":::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::")
println(":::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::")
println(":::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::")
#----------------------------------------------------------------------------
arr =[1,"hola",3,4,5,6,77,83];
println(arr[2]);




arr[2]=2099;
println(arr[2]);
println(length(arr),"\n--------------------------");

#----------------------------------------------------------------------------
arr2DM =[["abeja","balada"],["carro","dinosaurio"],["elefante","fogata"]];
println(arr2DM[1][2]);

arr2DM[1][2]="BANRURAL";
println(arr2DM[1][2]);
println(length(arr2DM),"\n--------------------------");








#----------------------------------------------------------------------------
arrNDM =[1,     [2,[1,2,3,["Gracias a Dios y a Jesus!",2021]],4],     3,4];

println(arrNDM[2][2][1]);
arrNDM[2][2][1] = "Jesus Gracias por ayudarme, te estare en deuda";
println(arrNDM[2][2][1]);#bug se le quito el ultimo acceso [1] XD
println("");

println(arrNDM[2][2][4][1]);#bug se le quito el ultimo acceso [1] XD
arrNDM[2][2][4][1] = "San Miguel, Rafael y Gabriel";
println(arrNDM[2][2][4][1]);#bug se le quito el ultimo acceso [1] XD

println(length(arrNDM),"\n--------------------------");



arreglo = [32,7*3,7,89,56,909,109,2,9,9874^0,44,3,820*10,11,8*0+8,10];
println("BubbleSort => ",arreglo);




################################################################################
random = [1, 5, 8, -1, 21, 42, -55, 123, -5, 5, 11];
abeja = [[1,51,4,3],[1,2,3,4]];
burro = [["a","b"],["c","d"],["e"],["f","g"]];
auxiliar = [[10.0,110.0,1120.0,11230.0],["hola",0.0,900,100]];


println("\n\nantes del cambio: ",burro);
burro = abeja;
println("despues del cambio: ",burro,"\n\n\n");

println("metodo 1 impresion: ",auxiliar);

auxiliar[2]=random;# la posicion 2 de auxiliar la cambie a random

print("metodo 2 impresion: ")
println(auxiliar);


###############borrar porq ya existe arriba######################

function potenciaNativa2(base::Int64, exponente::Int64,msg::String)::Int64
    resultado = base;
    while exponente > 1
        resultado = resultado * base;
        exponente = exponente - 1;
    end;

    println(">>>dentro de funcion potenciaNativa el msg es: ",msg)
    return resultado;
end;


function sumarTodo2(num1::Int64, num2::Int64)::Int64
    result = 0;
    if num1 < 0 || num2 < 0
        return -1;
    else
        while num1 > 0 || num2 > 0
            result = result + (num1 + num2);
            num1 = num1 - 1;
            num2 = num2 - 1;
        end;
        return result;
    end;

    
end;




sevens =7;

println(potenciaNativa2(5, sevens,"78125"));

operation = arreglo[3] + 13;
println(operation,"\n");

println(potenciaNativa2(2, 2,"4"));
abc=true;
println(abc);
println(potenciaNativa2(4, 2,"16"));
println("");



println(sumarTodo2(5, 4));
println(sumarTodo2(-1, -5));
println(sumarTodo2(7, 7));




##################################################################
println("------------factorial--------------");

function factorial(num::Int64)::Int64
    if num == 1
        return 1;
    else
        return num * num;#factorial(num - 1);
    end;
end;


fer = 2 ;
println(factorial(fer));



println(sumarTodo2(-5, -100));

operationE = arreglo[300] + 13; #fuera de rango el index
println(operationE,"\n");



println("************************************\n***********************************")
# Ejemplo de return
#arreglo = [32,7*3,7,89,56,909,109,2,9,9874^0,44,3,820*10,11,8*0+8,10];


function scolari(arreglo::Vector)::Int64

    num = 0;
    arreglo[3] = arreglo[3] + 13; #fuera de rango el index


    println("**** DENTRO DE FUNCION PASO POR REFERENCIA ****")
    println(arreglo,"\n");


    while num < 10
        num = num + 1;
        if num == 5
            return 5;
        end;
        print(num);
    end;
    return 0;
end;

println(scolari(arreglo));
println(" ----- despues de salir de funcion -----");
println(arreglo[3]);


# En este caso el vector [1,2] se transformarÃ¡ en [3,2]
function valores(x::Vector)
    x[1] = 3;
    println("-------");
    println(x);
    println("");
end;



xx = [1, 2];
println(xx);
valores(xx);



arregloBool =[true,false,[false,true],4,5,false,true];#arreglo de bool
println(length(arregloBool));
println(arregloBool);
















println("----------------------------------------");
xx2 = [1, 2,777,8,true,[1,3,7]];
println(xx2,"\n\n");

xx2[6][2] = "hola"; #declaracion array
println(xx2);#llamar array

xx2[6][3] = true; #declaracion array
println(xx2);#llamar array




adf = false;
println(adf);

xx2[6][1] = true; #declaracion array
println(xx2[6][1]);#llamar array




println('-----------------------------------------');

porTen = xx2[1] * 10;
asdf = xx2[1] * porTen;#llamar array
println(">>>>>>>>>>>>>\n",asdf);














#=
function Impresion_char(x::Vector)#se queda con el 1er vector para siempre :/ no se actualiza de param
    println("-------");
    println(x);
    println("-------");
end;

println("\n\n************************   llamada de xx2")
Impresion_char(xx2);
println("************************   llamada de arregloBool")
Impresion_char(arregloBool);
=#