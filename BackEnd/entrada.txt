println("yukaluu");

chunni="Naruto";


function JOLA( a::Int64,  b::Int64)

    println("!!!!!!!!!!   entre en funcion return JOLA  !!!!!!!!!!!");


    return a+b;
end;


function HOLA2( valeria::String, valeria2::String)

    println("!!!!!!!!!!   YUPIIIII  !!!!!!!!!!!");
    #println(3+5+67+75+100);#commit_4

    println("++++paso de params+++++");
    println(valeria);
    println(valeria2);
    println("++++fin paso de params+++++\n\n");

end;


#--------------------------------------------------------------------------------------

    println("\n\n$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$");
    println(  JOLA(500,100)  );

    Susan = JOLA(100,100);
    println(Susan);
    println("$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\n\n\n");


    HOLA2("JESUS","SE LA LUZ Y GUIA DE MI VIDA");
    println(chunni);


    main();#!!!!!!!!!!   HELLO THERE  !!!!!!!!!!!

    println("\n\n------------------------------------------");

#soy un fantasma :D
( 9.9 + 0.1 );                          #1

println(90);#commit_1
println("hola");#commit_2



#=
soy un GENGAR :D
=#



(3+5);                                  #2
#=
soy
un
GENGAR
:D
=#



(55--4+1);#=soy un GENGAR :D            #3

(999+0 );

=#

(9.1+ 90.9    );@                          #4

1+5;
println("\n------------------------------\n");
println(90+3*5.1);                               #5 ya se recupera del error :) por la produccion de instruccion : error -> def p_instruccion_error
println("\n------------------------------\n");

#guti
#soy un fantasma :D


#=LA
BASE DE TODO
HEXADECIMAL ES  =====#
*120-5);
(120+(-4));                             #6

#println(5.32);
println("Julia");#commit_3
println(3+5+67+75+100);#commit_4

println(300.99+99.02);#commit_5
println(-(500-600) == 100);

println("hola" == "hola mundo");
println(1+0);

println( ! 90>100  && 5=6-1  );
println( "hola" != "hola"  );



#Int64 variable =5;
#String casa ="casa linda";




junio9 = nothing ::nothing;

julio9 = nothing;
println(julio9);

int64 = 56+89::Int64;# 145





flotante = 54.50::Float64;      #creo variable forma1
println(flotante);

println("------");

flotante1 = 777.777;            #creo variable forma2
println(flotante1);
println(flotante1+222.222);

println("------");

flotante1 = "Claire Redfield\n\n";   #modifico el tipo de variable ya existente a string
println(flotante1);




ficha= (7887>1 && 90!=1) || "hola"!="hola"::Bool;

junio = "hulk,thor,ironman\nbatman,superman,wonder woman"::String;
println(junio);#ahora el id q ya tiene su valor tonces muestro este en consola

#a cambiar a junio

junio = "\nada wong";
println(junio);


println(true || false);
println(".......................");
vool=true;
println(vool);

vool2=true || (67<1);
println(vool2);#false

println("(!=) result:");
println( vool != vool2 );

println("====================================================");

bandera=100;
bandera=bandera+1;
println(bandera);

#bandera esta disponible en la condicionales de los ifs en la tabla de simbolos la busca
#elseif necesita recursividad

if (5+5)<(2+1)
    println("entre al if");

elseif bandera+50>300
    println("entre al else if");

elseif !true
    println("entre al else if xddddd");

elseif true==false
    println("entre al else if Fail");

else
    if bandera-101==0
        println("ZERO");

        if bandera-101==0
            println("ONE------");
            println(bandera);#$$
            println("cambio de badera");#$$
            bandera=50::Int64;#$$
            println(bandera);#$$

            if bandera-101==0
                println("TWO");
            end;

        end;
        println("bandera anterior+++");
         println(bandera);
    end;
    println("NAC");

end;

println(bandera);




println("########################");

if true
    println("ZZZZZ");

end;

if !true
    println("YYYYYY");

elseif true
    println("entre al else if xddddd");

elseif !true
    println("2222");
else
    println("YOU SUCK");

end;

if true
    println("XXXXX");

elseif true
    println("BARCELONA");

end;

println("//////////////////   while   ///////////////////////////");
#break;

num = 0;

while num<10

    println(num);

    if num==2
        break;
    end;

    num = num+1;

end;


while true
    println(true); # Imprime solamente una vez true
    break;
end;


var1 = -90;
var2 = var1+10;

println(var2);



bulba=1;
squir=2;
char=3;

println("SUMA REGIONALES KANTO:::::::::::::::::::")
println(bulba+squir+char);

#break;

println(chunni);




function main()

    println("!!!!!!!!!!   HELLO THERE  !!!!!!!!!!!");

end;







#PROBANDO RECURSIVIDAD -------------------------------------------------------------------

println("------FACTORIAL----------")
println(   Factorial(6)   );
println("------FIN FACTORIAL----------")

function Factorial(numb1::Int64 )

    if numb1==0
        return 1;
    else
        return numb1 * Factorial(numb1-1);
    end;

end;



println("\n\n------PAR----------");
println(   PAR(100)   );
println("------FIN PAR----------");



println("\n\n------IMPAR----------");
println(   IMPAR(15)   );
println("------FIN IMPAR----------");





function PAR(numP::Int64)

    if numP==0
        return true;
    end;
    return IMPAR(numP-1);

end;




function IMPAR(numi::Int64 )

    if numi==0
        return false;
    end;
    return PAR(numi-1);

end;


Bulma=0::Int64;

function ackermann(m :: Int64, n ::Int64 )

Bulma=Bulma+1;

    if m==0
        return n+1;
    elseif m>0 && n==0
        return ackermann(m-1,1)
    else
        return ackermann(m-1 , ackermann(m,n-1) );
    end;

end;





#FUNCIONES NATIVAS LENGUAJE-------------------------------------------
println("------FUNCIONES NATIVAS uppercase----------");
lowerString = uppercase("JiLL vAlenTInE <3") ::String;
println(lowerString)


println("------FUNCIONES NATIVAS lowercase----------");
#lowerString2 = lowercase(lowerString) ::String;
println(lowercase(lowerString))






println("Hola " ^ 5);

println(4>=4)

println("\n\n------------  log ------------");
kevin = log(4,2.00001);
println(  kevin );

println("\n\n------------  log10 ------------");
marlon = 100
kevin1 = log10(marlon);
println(  kevin1 );

println("\n\n------------  sqrt ------------");
balor=500
println(sqrt(balor));


println("\n\n------------  sin ------------");
balor=60
println(sin(balor));

println("\n\n------------  cos ------------");
balor=30
println(cos(balor));



println("\n\n------------  tan ------------");
balor=45
println(tan(balor));





println("\n\n------ parser ------");
println(  parse(Int64 , "9000") +500    );


bal =3.9999
println("\n\n------ trunc ------");
println(  trunc(bal)+12    );



bal =3
println("\n\n------ float NF------");
println(  float(bal)  );


bal =89+90-12.1 >0
println("\n\n------ string NF------");
println(  ":::.... " * string(bal) *" ....::: "*" ->" * " es una cadena"  );



println("\n\n------ typeof NF------");
println(  typeof('cadenita')  );


println("\n\n------ typeof NF------");
println(  typeof(Nothing)  );
println(  typeof(888888)  );





function FUNCION_SUMA(a::Float64, b)

    println("!!!!!!!!!!   entre en funcion return con un param sin tipo !!!!!!!!!!!");

    shinmekami_tensei="persona";
    return a+b;
end;


joder = 10.09;

sumatoria = FUNCION_SUMA(9.01,joder);
println("\n\n------------------------")
println(sumatoria);


#=
println("\n\n------ACKERMANN----------");
println(   ackermann(3,5)   );
println("\nnumero de iteraciones del ackermann")
println(Bulma)
println("------FIN ACKERMANN----------\n\n");
=#

println(":::::::::::::::::::::::::::::");

#Ejemplo continue
num = 0;
while num < 10
    num = num + 1;
    if num == 5
        continue;
        println("       (ToT)   ");
    end;
    print(num);
end;
println("");

continue;



function retorna_NULL()

    println("!!!!!!!!!!   entre en funcion returna null !!!!!!!!!!!");



end;


println(retorna_NULL());

#= Prueba de referencias
function valores(x)
    x[1] = 3;
    x[3][2]=55;
end;
=#


arr = ["H","O","L",["90",90,true],99,89.999,false,[90,99],false];
println(arr);

arr = [1,2,3,4,5,6];
x = [1, 2,arr];

#valores(x);
println(x); # [3, 2, [1, 55, 3, 4, 5, 6]]
println(arr); # [1, 55, 3, 4, 5, 6]

#println("+", "-");

println("IIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIII");
push!(x,7);
println(x);# [1, 2, [1, 2, 3, 4, 5, 6],7]

println("------------------")

println(x);
valoresZ();
println(x);
println("--------- IMPRIMO ARRAY DENTRO DE FUNCION---------")
println(arr2)

println("::::::::::::::::::::::::::::::::::");
arr2 = valoresZ2();
println("--------- IMPRIMO ARRAY DENTRO DE FUNCION---------")
println(arr2)

function valoresZ()

    arr2 = [9,8,7,6,5];
        println("------IMPRIMO ARRAY DENTRO DE FUNCION CON OTRA FUNCION--------");
    println(arr2);
    x2 = [11, 10,arr2];
    push!(x2,5-90);
    println(x2);

end;




function valoresZ2()

    arr3 = [9,8,7,6,5,4,3];
        println("------IMPRIMO ARRAY DENTRO DE FUNCION CON OTRA FUNCION--------");
    println(arr3);
    x3 = [11, 10,arr3];
    push!(x3,5-90);
    println(x3);

    return arr3;

end;



println(string([1,2,3]));

println("IIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIII");
inta =90;
push!(x,"hola mundo");
push!(x,"hola mundo2");
println(x);# [1,2,[1,2,3,4,5,6],7,hola mundo,hola mundo2]

println("------");

koffing = pop!(x);

println(koffing);
println(x);# [1,2,[1,2,3,4,5,6],7,hola mundo]

println("_ _ _ _ _")
println(length(x));     #5
println("_ _ _ _ _")



palabra = "hola_maria_y_mundo"
num=0;
for letra in palabra

    num = num + 1;
    if num == 1
        continue;
        println("       (ToT)   ");
    end;

    print(letra);
    print(num);

end;


println("\n*****************************************")



init = 1;
finit = 7;

num=0;
for letra in 1:finit

    num = num + 1;
    if letra == 5
        continue;
        println("       (ToT)   ");
    end;

    print(letra);
    print("-");
    print(num);
    print(",");

end;

pasion = 9090909090;
println("hola_",pasion);


println("-----------------------------");
println(x);     # [1,2,[1,2,3,4,5,6],7,hola mundo]
x[2]=100;
x[3][6]=200;
x[3][6][2]=300;
println("-----------------------------");
println(x);     # [1,100,[1,2,3,4,5,200],7,hola mundo]

println("FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF")
mamamia = [1,2,[1,2,3,4,5,[1,2,3,[5],6],7],8,'hola mundo']
println("-----------------------------");
println("-----------------------------");
mamamia[2]=400;
mamamia[3][5]=x[2];
println(mamamia);     # [1,400,[1,2,3,4,100,[1,2,3,[5],6],7],8,'hola mundo']

println("---------")
println(mamamia[3][5]);#500
println(mamamia[1]);#1
println(mamamia[3][6][4][1]);#5

println(mamamia[3][6][4][1]==5);

for i in 1:(1*1+2)
    println(i);

end;

#----------------------------------------------------------------------------------------------------------------------------------------------------
#= mutable =# struct Actor
    nombre:: String;
    edad:: Int64;
end;

struct Pelicula
    nombre::String;
    posicion::Int64;
end;

struct Contrato
    actor::Actor;
    pelicula::Pelicula;
end;

actores = ["Elizabeth Olsen", "Adam Sandler", "Christian Bale", "Jennifer Aniston"];
peliculas = ["Avengers: Age of Ultron", "Mr. Deeds", "Batman: The Dark Knight", "Marley & Me"];





Actora_marvel = Actor("Elizabeth Olsen",34);

println(">>>>>>>>>>>>>>>>>>>><<<<<<<<<<<<<<<<<<<<<<<");
println(Actora_marvel);
println(Actora_marvel.nombre);
println(Actora_marvel.edad-9);

indice = 2;
println(actores[indice-1]*" guapa :p");

println("____________");
println( length(actores) );


println("_____ cambio de edad _______");
Actora_marvel.edad = 27;
println(Actora_marvel.edad);



arelis = crearPreciosa();

println("############################");
println(arelis.nombre);
println("############################");
#arelis.edad=21;
println(arelis.edad);




function crearPreciosa()
    return Actor("Arelis",24);
end;

function swap(i::Int64, j::Int64, arr)
    temp = arr[i]::Int64;
    arr[i] = arr[j];
    arr[j] = temp;
end;

function bubbleSort(arr)
    for i in 0:(length(arr) - 1)
        for j in 1:(length(arr) - 1)
            if(arr[j] > arr[j + 1])
                swap(j, j+1, arr);
            end;
        end;
    end;
end;

function insertionSort(arr)

    for i in 2:length(arr)
        j = i;
        temp = arr[i];
        while(j > 1 && arr[j - 1] > temp)
            arr[j] = arr[j-1];
            j = j - 1;
        end;
        arr[j] = temp;
    end;

end;

arreglo = [32,7*3,7,89,56,909,109,2,9,9874^0,44,3,820*10,11,8*0+8,10];
bubbleSort(arreglo);
println("BubbleSort => ",arreglo);

arreglo = [32,7*3,7,89,56,909,109,2,9,9874^1,44,3,820*10,11,8*0+8,10];
arreglo[1] = arreglo[2]^0;
insertionSort(arreglo);
print("InsertionSort => ",arreglo);



function ackerman(m::Int64, n::Int64)
    if m == 0
        return n + 1;
    elseif m > 0 && n == 0
        return ackerman(m - 1, 1);
    else
        return ackerman(m - 1, ackerman(m, n - 1));
    end;
end;

function hanoi(discos, origen, auxiliar, destino)
    if discos == 1
        println("Mover de ", origen, " a ", destino);
    else
        hanoi(discos - 1, origen, destino, auxiliar);
        println("Mover de ", origen, " a ", destino);
        hanoi(discos - 1, auxiliar, origen, destino);
    end;
end;

function factorial(num::Int64)
    if num == 1
        return 1;
    else
        return num * factorial(num - 1);
    end;
end;

println(factorial(5));

println(ackerman(3, 5));

hanoi(3, 1, 2, 3);

random = [1, 5, 8, -1, 21, 42, -55, 123, -5, 5, 11];

a = [
    [
        random[1] * 3,
        51,
        random[4] / 2,
        (random[3] * 10) % 7
    ], 
    [
        1,
        2,
        3,
        4
    ]
];

b = [
    [
        1,
        2,
        3,
        4   
    ], 
    [
        random[1] * 3,
        51,
        random[4] / 2,
        (random[3] * 10) % 7
    ]
];

auxiliar = [
    [
        0.0,
        0.0,
        0.0,
        0.0
    ], 
    [
        0.0,
        0.0,
        0.0,
        0.0
    ]
];


# FORM MODIFICADO PARA QUE FUNCIONE SINO F
function printMatriz(matrix)
    println("[");
    for i in 0:(length(matrix) - 1)
        print("[");
        for j in 0:i
            print(j, " ");
        end;
        println("]");
    end;
    println("]");
end;

function sumarMatrices(matrix1, matrix2)
    global auxiliar;
    if length(matrix1) != length(matrix2)
        return "NO SE PUEDEN SUMAR. NO SON DE LA MISMA LONGITUD";
    end;

    
    for i in 1:length(matrix1)
        for j in 1:length(matrix1[1])
            auxiliar[i][j] = matrix1[i][j] + matrix2[i][j];
        end;
    end;
    return auxiliar;
end;

function compararMatrices(matrix1, matrix2)
    if length(matrix1) != length(matrix2)
        return false;
    end;

    
    for i in 1:length(matrix1)
        for j in 1:length(matrix1[1])
            if matrix1[i][j] != matrix2[i][j]
                return false;
            end;
        end;
    end;
    return true;
end;

println("MATRIZ a");
printMatriz(a);
println();
println("MATRIZ b");
printMatriz(b);

println();
println("LAS DOS MATRICES SUMADAS");
println(sumarMatrices(a, b));

println();
println("COMPARAR MATRICES. SON IGUALES?");
println(compararMatrices(a, b));

println();
println("Pop Matriz a");

popResult = pop!(a);
println(popResult);

println();
println("Push a b");
push!(b, [3010.1999]);
printMatriz(b);

b = a;
println();
println("COMPARAR MATRICES. SON IGUALES?");
println(compararMatrices(a, b));


println("");
println("=======================================================================");
println("=================================FOR-2=================================");
println("=======================================================================");

arr = [1,2,3,4,5,6];
for i in arr
    if(length(arr) > i)
        println(i);
    end;
end;

println("");
println("=======================================================================");
println("=================================FOR-3=================================");
println("=======================================================================");
for e in ["lunes","martes","miercoles","jueves","viernes"]
        println(e); 
end;